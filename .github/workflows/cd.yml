name: E4 App Continuous Delivery

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'E4-app/**'
      - '.github/workflows/tests.yml'
      - '.github/workflows/cd.yml'
  workflow_dispatch:

jobs:
  build-and-push-image:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (for pre-build test reuse if needed)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run unit & integration tests (reuse CI logic)
        working-directory: E4-app
        env:
          SECRET_KEY: ci-test-secret
          URL_E1: http://fake-e1
          URL_E3: http://fake-e3
          E3_API_USERNAME: test
          E3_API_PASSWORD: test
          DISABLE_MONITORING: '1'
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pytest -q --maxfail=1 --disable-warnings

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}-e4-app
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./E4-app
          file: ./E4-app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release-pr:
    name: Create Release Pull Request
    needs: build-and-push-image
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Pull Request to main
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Release: Sync dev -> main'
          body: 'Automated release PR after successful CD build.'
          base: main
          branch: dev
          labels: release,automation
